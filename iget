#! /usr/bin/perl

use strict;
use warnings;

my $animated=0;
my $first=0; # first image
my $only_list=0;
my $print_index=0;
my $real_name=0;
my $safesearch=0;
my $hay_opciones=1;
my $max_n=1000;
my $buscador="google";

my @palabras=();
foreach my $arg (@ARGV) {
	if ($arg =~ /^-/ && $hay_opciones)  
	{
		$animated=1				if ($arg =~ /a/);
		$buscador="google"     	if ($arg =~ /g/);
		$buscador="yahoo"      	if ($arg =~ /y/);
		$buscador="bing"       	if ($arg =~ /b/);
		$buscador="duckduckgo" 	if ($arg =~ /d/);
		$only_list=1           	if ($arg =~ /l/);
		$print_index=1         	if ($arg =~ /i/);
		$real_name=1           	if ($arg =~ /r/);
		$safesearch=1          	if ($arg =~ /s/);
		$max_n=$1 				if ($arg =~ /m([0-9]+)/);
		$first=$1				if ($arg =~ /f([0-9]+)/);
		$hay_opciones=0			if ($arg =~ /^-.*-/);
	} else {
		push @palabras, $arg;
	}
}

my $terminos=join('+', @palabras);

if ($terminos eq "") {
	print "Usage: iget [-a] [-b|-d|-g|-y] [-l] [-i] [-r] [-s] [-f#] [-m#] [--] search terms ...\n";
	exit 1;
}

my @chars=("a".."z");
my $auxfile; # random string
$auxfile .= $chars[rand @chars] for 1..12;

#my $terminos=join('+',@ARGV);

my $vqd=0;
# in duckduckgo we must obtain first a numeric code called vqd
if ($buscador eq "duckduckgo") {
	my $auxrequest=`wget -O - https://duckduckgo.com?q=$terminos`;
	$auxrequest =~ /vqd='(\d*)'/;
	$vqd=$1;
}

my $ua="\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36\"";
my $url="https://www.google.es/search?\\\&tbm=isch\\\&tbs=isz:lt,islt:vga\\\&q=$terminos";
my $animated_option="\\\&tbs=itp:animated";
my $cookies="";
my $initial_number=1000;
my $regex='"ou":"([^"]*?)"';
my $safeon ="\\\&safe=on";
my $safeoff="\\\&safe=off";
if ($buscador eq "yahoo") {
	$url="https://images.search.yahoo.com/search/images?\\\&q=$terminos";
	$animated_option="\\\&imgty=gif";
	$cookies="--header=\"Cookie: sB=vm=p\"" if !$safesearch;
	$initial_number=2000;
	$regex='"iurl":"([^"]*?)"';
	$safeon ="";
	$safeoff="";
}
if ($buscador eq "bing") {
	$ua="";
	my $firstplusone=$first+1;
	$url="https://www.bing.com/images/search?q=$terminos\\\&first=$firstplusone";
	$animated_option="\\\&qft=+filterui:photo-animatedgif";
	$cookies="--header=\"Cookie: SRCHHPGUSR=ADLT=OFF; _SS=SID=0\"" if !$safesearch;
	$initial_number=3000+$first;
	$regex='thumb" target="_blank" href="([^";=]*?[^/])" h=';
	$safeon ="";
	$safeoff="";
}
if ($buscador eq "duckduckgo") {
	$url="https://duckduckgo.com/i.js?q=$terminos\\\&s=$first\\\&vqd=$vqd";
	$animated_option="\\\&f=type:photo-animatedgif";
	$initial_number=4000+$first;
	$regex='"image":"([^"]*?)"';
	$safeon ="\\\&p=2"; # 0 or 1 for moderate
	$safeoff="\\\&p=-1";
}

$url=$url . $animated_option if $animated;
$url=$url . $safeon  if  $safesearch;
$url=$url . $safeoff if !$safesearch;

system("wget $cookies -O $auxfile --user-agent=$ua $url");

open(my $fh, $auxfile)
  or die "Could not open file '$auxfile' $!";

my @total= ();
while (my $row = <$fh>) {
	my @lista = $row =~ /$regex/g;
	push(@total, @lista);
}
close($fh) or die "Could not close file '$auxfile' $!";

$terminos =~ s/ /_/g;     # substitute spaces for underscores
my $i = $initial_number;
my $count=1;
foreach $a (@total) {
	$a =~ s/\(/\\\(/g;    # escape parentheses
	$a =~ s/\)/\\\)/g;
	$a =~ s/\&/\\\&/g;    # escape ampersands
	my $out = $terminos . $i;
	$out = $out . ".gif" if $animated;
	my $salida = "-O $out";
	$salida = "" if $real_name;
	print "$i: " if $print_index;
	print "$a\n";
	system("wget --tries=1 --timeout=4 $salida $a") if !$only_list;
	unlink $out if ( !$only_list && -z $out); # delete file if empty
	last if ($count==$max_n);
	$count++;
	$i++;
}
system("rm $auxfile");
